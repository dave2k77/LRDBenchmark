name: Maintenance Tasks

on:
  schedule:
    # Run every Monday at 6:00 UTC
    - cron: '0 6 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  dependency-check:
    name: Check Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools safety bandit

    - name: Check for outdated dependencies
      run: |
        echo "Checking for outdated packages..."
        pip list --outdated --format=freeze > outdated.txt
        echo "Outdated packages found:"
        cat outdated.txt || echo "All packages are up to date"

    - name: Check for security vulnerabilities
      run: |
        echo "Checking for security vulnerabilities..."
        safety check --json --output safety-report.json || true
        echo "Security check completed"

    - name: Upload reports
      uses: actions/upload-artifact@v3
      with:
        name: maintenance-reports-${{ github.run_id }}
        path: |
          outdated.txt
          safety-report.json

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy

    - name: Check code formatting
      run: |
        echo "Checking code formatting with Black..."
        black --check --diff . || echo "Code formatting issues found"

    - name: Check code style
      run: |
        echo "Checking code style with Flake8..."
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Check type hints
      run: |
        echo "Checking type hints with MyPy..."
        mypy --ignore-missing-imports --no-strict-optional . || echo "Type checking issues found"

  documentation-check:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check README links
      run: |
        echo "Checking README.md for broken links..."
        # This is a simple check - in production you might want a more sophisticated link checker
        if grep -q "http" README.md; then
          echo "README contains external links - consider validating them"
        else
          echo "No external links found in README"
        fi

    - name: Check package structure
      run: |
        echo "Checking package structure..."
        if [ -f "setup.py" ] && [ -f "pyproject.toml" ]; then
          echo "✅ Package configuration files present"
        else
          echo "❌ Missing package configuration files"
          exit 1
        fi

    - name: Check license
      run: |
        echo "Checking license file..."
        if [ -f "LICENSE" ]; then
          echo "✅ LICENSE file present"
        else
          echo "❌ LICENSE file missing"
          exit 1
        fi

  notify-maintenance:
    name: Notify Maintenance Results
    runs-on: ubuntu-latest
    needs: [dependency-check, code-quality, documentation-check]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create maintenance summary
      run: |
        echo "## 🔧 Maintenance Summary for ${{ github.repository }}" >> maintenance-summary.md
        echo "" >> maintenance-summary.md
        echo "**Run Date:** ${{ github.event.schedule || 'Manual' }}" >> maintenance-summary.md
        echo "**Status:** ${{ needs.dependency-check.result == 'success' && needs.code-quality.result == 'success' && needs.documentation-check.result == 'success' && '✅ All checks passed' || '⚠️ Some checks failed' }}" >> maintenance-summary.md
        echo "" >> maintenance-summary.md
        
        if [ -f "artifacts/outdated.txt" ]; then
          echo "### 📦 Dependency Updates" >> maintenance-summary.md
          cat artifacts/outdated.txt >> maintenance-summary.md
          echo "" >> maintenance-summary.md
        fi
        
        echo "### 📊 Check Results" >> maintenance-summary.md
        echo "- **Dependencies:** ${{ needs.dependency-check.result }}" >> maintenance-summary.md
        echo "- **Code Quality:** ${{ needs.code-quality.result }}" >> maintenance-summary.md
        echo "- **Documentation:** ${{ needs.documentation-check.result }}" >> maintenance-summary.md

    - name: Upload maintenance summary
      uses: actions/upload-artifact@v3
      with:
        name: maintenance-summary-${{ github.run_id }}
        path: maintenance-summary.md
