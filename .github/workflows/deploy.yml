name: Deploy to PyPI

on:
  release:
    types: [published]

jobs:
  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "Publishing to PyPI..."
        twine upload dist/*

    - name: Create GitHub release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/lrdbench-${{ github.event.release.tag_name }}-py3-none-any.whl
        asset_name: lrdbench-${{ github.event.release.tag_name }}-py3-none-any.whl
        asset_content_type: application/octet-stream

    - name: Upload source distribution
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/lrdbench-${{ github.event.release.tag_name }}.tar.gz
        asset_name: lrdbench-${{ github.event.release.tag_name }}.tar.gz
        asset_content_type: application/gzip

    - name: Notify deployment success
      run: |
        echo "ðŸŽ‰ Successfully deployed lrdbench ${{ github.event.release.tag_name }} to PyPI!"
        echo "Package available at: https://pypi.org/project/lrdbench/"
